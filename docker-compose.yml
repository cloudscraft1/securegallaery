version: '3.8'

services:
  # Main application container
  secure-gallery:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: secure-gallery:latest
    container_name: secure-gallery-app
    ports:
      - "80:8080"
      - "443:443"  # For future HTTPS support
    environment:
      - NODE_ENV=production
      - PYTHONPATH=/app/backend
    volumes:
      # Persist image uploads
      - gallery_images:/app/backend/images/gallery
      # Persist logs
      - gallery_logs:/var/log
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - gallery-network


  # Nginx reverse proxy (if you want to separate it)
  # nginx-proxy:
  #   image: nginx:alpine
  #   container_name: secure-gallery-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - secure-gallery
  #   restart: unless-stopped
  #   networks:
  #     - gallery-network

volumes:
  gallery_images:
    driver: local
  gallery_logs:
    driver: local

networks:
  gallery-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
